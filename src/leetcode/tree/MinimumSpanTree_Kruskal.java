package leetcode.tree;

class Node {
    TreeNode node;

}
// 克鲁斯卡尔算法
public class MinimumSpanTree_Kruskal {
    // 最小生成树：在连通图的所有生成树种，所有边的代价和最小的生成树，成为最小生成树。
    // 算法思想：1、把图中的所有边按代价从小到大排序
    // 2、把n个顶点看成独立的n颗树组成的森林
    // 3、按权值从小到大选择边，所选的边连接的两个顶点应属于两颗不同的树，则成为最小生成树的一条边，并将这两个树合并作为一棵树。
    // 4、重复3，直到所有顶点都在一棵树内或者有n-1条边为止。

}
